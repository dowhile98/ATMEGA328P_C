
GPIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000206  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000206  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000206  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000235  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c12  00000000  00000000  000002ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007b1  00000000  00000000  00000ebf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003fe  00000000  00000000  00001670  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000104  00000000  00000000  00001a70  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00001b74  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000125  00000000  00000000  00001d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00001ea1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000018e  0000018e  00000202  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.ExternalIT_Config 0000001e  00000170  00000170  000001e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_1 00000024  00000128  00000128  0000019c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__vector_14 00000024  0000014c  0000014c  000001c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.Timer0Config_FastPWM7 00000028  00000100  00000100  00000174  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    0000003e  000000c2  000000c2  00000136  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 94 00 	jmp	0x128	; 0x128 <__vector_1>
   8:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
   c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  10:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  14:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  18:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  1c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  20:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  24:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  28:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  2c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  30:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  34:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  38:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__vector_14>
  3c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  40:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  44:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  48:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  4c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  50:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  54:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  58:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  5c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  60:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  64:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 01       	movw	r0, r2
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 61 00 	call	0xc2	; 0xc2 <_etext>
  ba:	0c 94 5f 00 	jmp	0xbe	; 0xbe <_exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

0000018e <__bad_interrupt>:
 18e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.ExternalIT_Config:

00000170 <ExternalIT_Config>:
	MCUCR = (1<<IVSEL);
}

void ExternalIT_Config(void){
	 // Configure PD2 as an input using the Data Direction Register D (DDRD)
	 DDRD &= ~_BV(DDD2);
 170:	8a b1       	in	r24, 0x0a	; 10
 172:	8b 7f       	andi	r24, 0xFB	; 251
 174:	8a b9       	out	0x0a, r24	; 10
	 // Enable the pull-up resistor on PD2 using the Port D
	 PORTD |= _BV(PORTD2);
 176:	8b b1       	in	r24, 0x0b	; 11
 178:	84 60       	ori	r24, 0x04	; 4
 17a:	8b b9       	out	0x0b, r24	; 11
	
	EICRA |= 1U<<ISC01;			//falling edge sensitivity (INT0)
 17c:	e9 e6       	ldi	r30, 0x69	; 105
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	82 60       	ori	r24, 0x02	; 2
 184:	80 83       	st	Z, r24
	EIMSK |= 1U<<INT0;			//mask INT0 
 186:	8d b3       	in	r24, 0x1d	; 29
 188:	81 60       	ori	r24, 0x01	; 1
 18a:	8d bb       	out	0x1d, r24	; 29
 18c:	08 95       	ret

Disassembly of section .text.__vector_1:

00000128 <__vector_1>:
void Move_interrupts(void)
{
	/* Enable change of Interrupt Vectors */
	MCUCR = (1<<IVCE);
	/* Move interrupts to Boot Flash section */
	MCUCR = (1<<IVSEL);
 128:	1f 92       	push	r1
 12a:	0f 92       	push	r0
 12c:	0f b6       	in	r0, 0x3f	; 63
 12e:	0f 92       	push	r0
 130:	11 24       	eor	r1, r1
 132:	8f 93       	push	r24
 134:	9f 93       	push	r25
 136:	95 b1       	in	r25, 0x05	; 5
 138:	80 e2       	ldi	r24, 0x20	; 32
 13a:	89 27       	eor	r24, r25
 13c:	85 b9       	out	0x05, r24	; 5
 13e:	9f 91       	pop	r25
 140:	8f 91       	pop	r24
 142:	0f 90       	pop	r0
 144:	0f be       	out	0x3f, r0	; 63
 146:	0f 90       	pop	r0
 148:	1f 90       	pop	r1
 14a:	18 95       	reti

Disassembly of section .text.__vector_14:

0000014c <__vector_14>:
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	0f b6       	in	r0, 0x3f	; 63
 152:	0f 92       	push	r0
 154:	11 24       	eor	r1, r1
 156:	8f 93       	push	r24
 158:	9f 93       	push	r25
 15a:	95 b1       	in	r25, 0x05	; 5
 15c:	84 e0       	ldi	r24, 0x04	; 4
 15e:	89 27       	eor	r24, r25
 160:	85 b9       	out	0x05, r24	; 5
 162:	9f 91       	pop	r25
 164:	8f 91       	pop	r24
 166:	0f 90       	pop	r0
 168:	0f be       	out	0x3f, r0	; 63
 16a:	0f 90       	pop	r0
 16c:	1f 90       	pop	r1
 16e:	18 95       	reti

Disassembly of section .text.Timer0Config_FastPWM7:

00000100 <Timer0Config_FastPWM7>:
 100:	8a b1       	in	r24, 0x0a	; 10
 102:	80 62       	ori	r24, 0x20	; 32
 104:	8a b9       	out	0x0a, r24	; 10
 106:	85 b5       	in	r24, 0x25	; 37
 108:	84 60       	ori	r24, 0x04	; 4
 10a:	85 bd       	out	0x25, r24	; 37
 10c:	84 b5       	in	r24, 0x24	; 36
 10e:	83 60       	ori	r24, 0x03	; 3
 110:	84 bd       	out	0x24, r24	; 36
 112:	85 b5       	in	r24, 0x25	; 37
 114:	88 60       	ori	r24, 0x08	; 8
 116:	85 bd       	out	0x25, r24	; 37
 118:	84 b5       	in	r24, 0x24	; 36
 11a:	80 62       	ori	r24, 0x20	; 32
 11c:	84 bd       	out	0x24, r24	; 36
 11e:	8e e1       	ldi	r24, 0x1E	; 30
 120:	87 bd       	out	0x27, r24	; 39
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	88 bd       	out	0x28, r24	; 40
 126:	08 95       	ret

Disassembly of section .text.main:

000000c2 <main>:
  c2:	0e 94 b8 00 	call	0x170	; 0x170 <ExternalIT_Config>
  c6:	84 b1       	in	r24, 0x04	; 4
  c8:	84 61       	ori	r24, 0x14	; 20
  ca:	84 b9       	out	0x04, r24	; 4
  cc:	0e 94 80 00 	call	0x100	; 0x100 <Timer0Config_FastPWM7>
  d0:	78 94       	sei
  d2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  d6:	88 bd       	out	0x28, r24	; 40
  d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  dc:	8e 5f       	subi	r24, 0xFE	; 254
  de:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  e2:	8f 31       	cpi	r24, 0x1F	; 31
  e4:	18 f0       	brcs	.+6      	; 0xec <main+0x2a>
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	80 e7       	ldi	r24, 0x70	; 112
  f0:	92 e0       	ldi	r25, 0x02	; 2
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	80 40       	sbci	r24, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x30>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <main+0x3a>
  fc:	00 00       	nop
  fe:	e9 cf       	rjmp	.-46     	; 0xd2 <main+0x10>
